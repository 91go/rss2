name: deploy
on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.18.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: checkout code
        uses: actions/checkout@v2
      - name: unit test
        run: go test ./...
      #      - name: Login to ACR
      #        uses: aliyun/acr-login@v1
      #        with:
      #          login-server: https://registry.cn-hangzhou.aliyuncs.com
      #          username: "${{ secrets.ACR_USERNAME }}"
      #          password: "${{ secrets.ACR_PASSWORD }}"
      #      - name: Start build docker image
      #        run: |
      #          echo ${{ github.ref_name }}
      #          echo ${{ github.event.inputs.tags }}
      #      - name: Build and push
      #        id: docker_build
      #        uses: docker/build-push-action@v2
      #        with:
      #          context: .
      #          push: true
      #          tags: |
      #            registry.cn-hangzhou.aliyuncs.com/91go/rss2:${{ github.event.inputs.tags }}
      #            registry.cn-hangzhou.aliyuncs.com/91go/rss2:latest
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: luckyhacking
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: luckyhacking/rss2:latest
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.SERVER_SSH_PWD }}
          port: 22
          timeout: 10m
          script_stop: true
          script: |
            cd ~/vps/rss2 && docker compose pull && docker compose down && docker compose up --build -d