kind: pipeline
type: docker
name: echo

clone:
  depth: 1

platform:
  os: linux
  arch: amd64

steps:
  - name: helloworld
    pull: if-not-exists
    image: hello-world


  - name: linter
    image: golang:latest
    pull: if-not-exists
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://goproxy.cn,direct"
      GOSUMDB: "off"
      CGO_ENABLED: "0"
      GOOS: "linux"
    volumes:
      - name: pkgdeps
        path: /go/pkg
    commands:
      - go get github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - golangci-lint run

  - name: test
    image: golang:latest
    pull: if-not-exists
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://goproxy.cn,direct"
      GOSUMDB: "off"
      CGO_ENABLED: "0"
      GOOS: "linux"
    depends_on:
      - helloworld
    volumes:
      - name: pkgdeps
        path: /go/pkg
    commands:
      - go test ./tests/...

#  - name: coverage
#    image: plugins/codecov
#    settings:
#      token:
#        from_secret: codecov-token
#      files:
#        - coverage.txt

  - name: build
    image: golang:latest
    pull: if-not-exists
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://goproxy.cn,direct"
      GOSUMDB: "off"
      CGO_ENABLED: "0"
      GOOS: "linux"
    depends_on:
      - helloworld
    volumes:
      - name: pkgdeps
        path: /go/pkg
    commands:
      - go build

#  - name: publish
#    image: docker/compose
#    pull: if-not-exists
#    environment:
#      USERNAME:
#        from_secret: aliyun_registry_username
#      PASSWORD:
#        from_secret: aliyun_registry_password
#    volumes:
#      - name: dockersock
#        path: /var/run/docker.sock
#    commands:
#      - tag=${DRONE_COMMIT}              # 使用 DRONE_COMMIT 作为tag
#      - echo "publish"
#      - echo dev_$tag
#      - export DOCKER_TAG=dev_$tag
#      - docker login --username=$USERNAME registry.cn-hangzhou.aliyuncs.com -p $PASSWORD
#      - docker-compose build
#      - docker-compose push
#
#  - name: scp
#    image: appleboy/drone-scp
#    pull: if-not-exists
#    settings:
#      host:
#        from_secret: dev_host
#      username:
#        from_secret: dev_user
#      password:
#        from_secret: dev_password
#      port: 22
#      target: /home/xuhewen/drone-golang-example
#      source:
#        - docker-compose.yml
#
#    - name: deploy
#      image: appleboy/drone-ssh
#      pull: if-not-exists
#      settings:
#        host:
#          from_secret: dev_host
#        username:
#          from_secret: dev_user
#        password:
#          from_secret: dev_password
#        port: 22
#        script:
#          - tag=${DRONE_COMMIT}               # 请预先在目标主机上执行 docker login
#          - echo "deploy"
#          - echo dev_$tag
#          - cd /home/xuhewen/drone-golang-example
#          - export DOCKER_TAG=dev_$tag
#        - docker-compose pull
#        - docker-compose stop
#        - docker-compose up -d
#
#  - name: notification
#    image: lddsb/drone-dingtalk-message
#    pull: if-not-exists
#    settings:
#      token:
#        from_secret: dingtalk_token
#      type: markdown
#      secret:
#        from_secret: dingtalk_secret
#      sha_link: true
#      message_color: true
#    when: # 即使流水线失败也能通知
#      status:
#        - success
#        - failure


trigger:
  branch:
    - main
  event:
    - push
    - pull_request
    - tag